name: Build and Deploy LibreChat Admin

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-deploy:
    runs-on: arc-runner-set
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3

      - name: Deploy to Kubernetes
        env:
          KUBECONFIG_DATA: ${{ secrets.K3S_KUBE_CONFIG }}
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          TENANT_ID: ${{ secrets.TENANT_ID }}
        run: |
          echo "$KUBECONFIG_DATA" | base64 -d > kubeconfig
          export KUBECONFIG=./kubeconfig

          # Generate cookie secret for OAuth2-Proxy
          COOKIE_SECRET=$(openssl rand -hex 16)

          # Create or update OAuth2-Proxy secret
          kubectl create secret generic oauth2-proxy-admin \
            -n librechat \
            --from-literal=OAUTH2_PROXY_CLIENT_ID="$AZURE_CLIENT_ID" \
            --from-literal=OAUTH2_PROXY_CLIENT_SECRET="$AZURE_CLIENT_SECRET" \
            --from-literal=OAUTH2_PROXY_COOKIE_SECRET="$COOKIE_SECRET" \
            --dry-run=client -o yaml | kubectl apply -f -

          # Update OAuth2-Proxy deployment with Tenant ID from secrets
          sed -i "s/YOUR_TENANT_ID/$TENANT_ID/g" k8s/oauth2-proxy/deployment.yaml

          # Apply Kubernetes manifests
          kubectl apply -f k8s/admin-ui/deployment.yaml
          kubectl apply -f k8s/admin-ui/service.yaml
          kubectl apply -f k8s/oauth2-proxy/service.yaml
          kubectl apply -f k8s/oauth2-proxy/deployment.yaml
          kubectl apply -f k8s/ingress.yaml

          # Restart deployments to pull latest image and secrets
          kubectl rollout restart deployment/librechat-admin-ui -n librechat
          kubectl rollout restart deployment/oauth2-proxy-admin -n librechat

          kubectl rollout status deployment/librechat-admin-ui -n librechat --timeout=5m
          kubectl rollout status deployment/oauth2-proxy-admin -n librechat --timeout=5m

          # Check deployment status
          kubectl get pods -n librechat -l app=librechat-admin-ui
          kubectl get pods -n librechat -l app=oauth2-proxy-admin

          rm -f kubeconfig

      - name: Deployment summary
        run: |
          echo "## Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Image**: ${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
          echo "- **URL**: https://chat.sidekickmachines.com/admin/" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: Deployed successfully" >> $GITHUB_STEP_SUMMARY
